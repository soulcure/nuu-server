package main

import (
	"nuu-server/file"
	"nuu-server/routes"

	"github.com/kataras/iris/v12"
	"github.com/sirupsen/logrus"

	"github.com/iris-contrib/swagger/v12"
	"github.com/iris-contrib/swagger/v12/swaggerFiles"

	_ "nuu-server/docs" // docs is generated by Swag CLI, you have to import it.
)

func init() {
	f := file.NewLogFile()
	logrus.SetLevel(logrus.TraceLevel)
	logrus.SetOutput(f)

	//logrus.SetFormatter(&logrus.JSONFormatter{})
	logrus.SetFormatter(&logrus.TextFormatter{
		DisableColors: true,
	})
	logrus.SetLevel(logrus.DebugLevel)
}

// @title Swagger Example API
// @version 1.0
// @description This is a sample server Petstore server.
// @termsOfService http://swagger.io/terms/

// @contact.name API Support
// @contact.url http://www.swagger.io/support
// @contact.email support@swagger.io

// @license.name Apache 2.0
// @license.url http://www.apache.org/licenses/LICENSE-2.0.html

// @host localhost:8899
// @BasePath /v1
func main() {
	f := file.NewLogFile()
	defer func() {
		if err := f.Close(); err != nil {
			logrus.Printf("close log file error: %s", err)
		}
	}()

	// the rest of the code stays the same.
	app := iris.New()

	url := swagger.URL(":8899/swagger/doc.json") //The url pointing to API definition
	app.Get("/swagger/{any:path}", swagger.WrapHandler(swaggerFiles.Handler, url))

	routes.Hub(app)

	app.Logger().SetOutput(f)
	app.Logger().SetLevel("debug")

	irisConfig := iris.WithConfiguration(iris.YAML("./conf/config.yml"))

	runner := iris.Addr(":8899")
	//runner := iris.TLS(":8899", "./conf/server.crt", "./conf/server.key") //https
	if err := app.Run(runner, irisConfig); err != nil {
		logrus.Error(err)
	}

}
